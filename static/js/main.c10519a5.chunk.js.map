{"version":3,"sources":["components/PokeCard.js","components/PokemonAllData.js","images/Bug.svg","images/Dark.svg","images/Dragon.svg","images/Electric.svg","images/Fairy.svg","images/Fighting.svg","images/Fire.svg","images/Flying.svg","images/Ghost.svg","images/Grass.svg","images/Ground.svg","images/Ice.svg","images/Normal.svg","images/Poison.svg","images/Psychic.svg","images/Rock.svg","images/Steel.svg","images/Water.svg","components/PokemonFilter.js","App.js","index.js"],"names":["PokeCard","id","name","types","sprite","stat_1","stat_2","stat_3","style","className","src","alt","PokemonAllData","React","useState","pokeData","setPokeData","useParams","getPokemonData","a","url","fetch","res","json","data","setTimeout","useEffect","Fragment","Boolean","sprites","versions","animated","front_default","type","abilities","ability","weight","height","stats","base_stat","moves","move","to","PokemonFilter","pokeFilter","setPokeFilter","loadMore","setLoadMore","pokemonsQ","setPokemonsQ","getPokemonsFiltered","pokemonObject","results","forEach","poke","dato","list","next","onClick","GrassType","FireType","WaterType","RockType","GhostType","ElectricType","BugType","PoisonType","NormalType","FairyType","FightingType","IceType","PsychicType","DragonType","DarkType","GroundType","FlyingType","SteelType","filter","pokef","includes","map","pke","fl","App","pokemons","setPokemons","prev","pageInfo","setPageInfo","getPokemons","previous","path","exact","pk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c10519a5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { GiHealthNormal, GiSpinningSword, GiShield } from \"react-icons/gi\";\r\nimport \"../styles/PokeCard.css\";\r\n\r\nfunction PokeCard({ id, name, types, sprite, stat_1, stat_2, stat_3 }) {\r\n\r\nconst style = types + \" card\";\r\n\r\n  return (\r\n    <div className={style}>\r\n      <div className=\"img-container\">\r\n        <img src={sprite} alt={name} />\r\n      </div>\r\n      <ol className=\"card_content\">\r\n        <h2>\r\n          {id}-{name}\r\n        </h2>\r\n        <p>Type: {types}</p>\r\n        <div className=\"card-stats\" >\r\n            <p>\r\n            <GiHealthNormal /> {stat_1}\r\n            </p>\r\n            <p>\r\n            <GiSpinningSword /> {stat_2}\r\n            </p>\r\n            <p>\r\n            <GiShield /> {stat_3}\r\n            </p>\r\n      </div>\r\n      </ol>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport { PokeCard };\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../styles/PokemonAllData.css\"\r\n\r\nfunction PokemonAllData() {\r\n\r\n    const[ pokeData, setPokeData ] = React.useState(null)\r\n\r\n    \r\n\r\n    // console.log()\r\n    const { id } = useParams()\r\n    \r\n    const getPokemonData = async ( url=`https://pokeapi.co/api/v2/pokemon/${id}` ) => {\r\n        const res = await fetch(url)\r\n        const data = await res.json()\r\n        setTimeout(() => setPokeData(data), 1000)\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        getPokemonData();\r\n      }, []);\r\n    \r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n        {Boolean(pokeData) ? (\r\n            <div className=\"data-container\" >\r\n            <div className=\"poke-sprite-container\" >\r\n                <img src={ pokeData.sprites.versions['generation-v']['black-white'].animated.front_default } alt={ pokeData.name } />\r\n                <p> sprite from: Pokemon black version</p>\r\n            </div>\r\n            <div className=\"side-data\" >\r\n                <h1>{ pokeData.name }</h1>\r\n                <h3>Type: { pokeData.types[0].type.name }</h3>\r\n                <h3>ability: { pokeData.abilities[0].ability.name }</h3>\r\n                <h3>Pokedex index: { pokeData.id }</h3>\r\n                <h3>weight: { pokeData.weight }</h3>\r\n                <h3>height: { pokeData.height }</h3>\r\n                <br/>\r\n                <h2>Base Stats</h2>\r\n                <h3>HP: { pokeData.stats[0].base_stat }</h3>\r\n                <h3>ATK: { pokeData.stats[1].base_stat }</h3>\r\n                <h3>DEF: { pokeData.stats[2].base_stat }</h3>\r\n                <h3>SP-ATK: { pokeData.stats[3].base_stat }</h3>\r\n                <h3>SP-DEF: { pokeData.stats[4].base_stat }</h3>\r\n                <h3>SPD: { pokeData.stats[5].base_stat }</h3>\r\n                <br/>\r\n                <h2>Initial Moves</h2>\r\n                \r\n                <h3>{ pokeData.moves[0].move.name }</h3>\r\n                <h3>{ pokeData.moves[1].move.name }</h3>\r\n                <h3>{ pokeData.moves[2].move.name }</h3>\r\n                \r\n                <br/>\r\n                <hr/>\r\n\r\n                <Link to='/' >\r\n                    <button \r\n                    className=\"fill\" >\r\n                    Back to list\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>) :\r\n        (<div>\r\n            <div className=\"lds-dual-ring\"></div>\r\n        </div>)\r\n        }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport { PokemonAllData }\r\n\r\n","export default __webpack_public_path__ + \"static/media/Bug.235aa1af.svg\";","export default __webpack_public_path__ + \"static/media/Dark.ffd5fef0.svg\";","export default __webpack_public_path__ + \"static/media/Dragon.bbfee3f5.svg\";","export default __webpack_public_path__ + \"static/media/Electric.36814671.svg\";","export default __webpack_public_path__ + \"static/media/Fairy.7930fe34.svg\";","export default __webpack_public_path__ + \"static/media/Fighting.4ffffec5.svg\";","export default __webpack_public_path__ + \"static/media/Fire.3ca285cc.svg\";","export default __webpack_public_path__ + \"static/media/Flying.185acbc5.svg\";","export default __webpack_public_path__ + \"static/media/Ghost.af4d1e78.svg\";","export default __webpack_public_path__ + \"static/media/Grass.2f497ad9.svg\";","export default __webpack_public_path__ + \"static/media/Ground.761443bc.svg\";","export default __webpack_public_path__ + \"static/media/Ice.de34cabb.svg\";","export default __webpack_public_path__ + \"static/media/Normal.2ba8a95a.svg\";","export default __webpack_public_path__ + \"static/media/Poison.9466e97a.svg\";","export default __webpack_public_path__ + \"static/media/Psychic.ad12cf61.svg\";","export default __webpack_public_path__ + \"static/media/Rock.9f9b4d01.svg\";","export default __webpack_public_path__ + \"static/media/Steel.9e484c48.svg\";","export default __webpack_public_path__ + \"static/media/Water.d6013547.svg\";","import React, { useEffect } from 'react';\r\nimport { PokeCard } from \"./PokeCard\";\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../styles/PokemonFilter.css\"\r\n\r\nimport BugType from \"../images/Bug.svg\"\r\nimport DarkType from \"../images/Dark.svg\"\r\nimport DragonType from \"../images/Dragon.svg\"\r\nimport ElectricType from \"../images/Electric.svg\"\r\nimport FairyType from \"../images/Fairy.svg\"\r\nimport FightingType from \"../images/Fighting.svg\"\r\nimport FireType from \"../images/Fire.svg\"\r\nimport FlyingType from \"../images/Flying.svg\"\r\nimport GhostType from \"../images/Ghost.svg\"\r\nimport GrassType from \"../images/Grass.svg\"\r\nimport GroundType from \"../images/Ground.svg\"\r\nimport IceType from \"../images/Ice.svg\"\r\nimport NormalType from \"../images/Normal.svg\"\r\nimport PoisonType from \"../images/Poison.svg\"\r\nimport PsychicType from \"../images/Psychic.svg\"\r\nimport RockType from \"../images/Rock.svg\"\r\nimport SteelType from \"../images/Steel.svg\"\r\nimport WaterType from \"../images/Water.svg\"\r\n\r\n\r\nfunction PokemonFilter() {\r\n\r\n    const[ pokeFilter, setPokeFilter ] = React.useState([])\r\n    const[ loadMore, setLoadMore ] = React.useState(`https://pokeapi.co/api/v2/pokemon?limit=80`)\r\n    const [pokemonsQ, setPokemonsQ] = React.useState('grass');\r\n\r\n    const getPokemonsFiltered = async() => {\r\n        const res = await fetch( loadMore );\r\n        const data = await res.json();\r\n\r\n        setLoadMore( data.next )\r\n\r\n        function pokemonObject(results){\r\n            results.forEach(async (poke) => {\r\n                const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${poke.name}`);\r\n                const dato = await res.json();\r\n                setTimeout(() => setPokeFilter(list => [...list ,dato]), 1000)\r\n              });\r\n        }\r\n        pokemonObject(data.results);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getPokemonsFiltered();\r\n    }, []);\r\n\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h2>filter by {pokemonsQ} type</h2>\r\n            <small>If they don´t appear push the \"Load more\" button until they do.</small>\r\n            <div className=\"filter-buttons\" >\r\n                <div className=\"col-1\" >\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'grass' ) } ><img src={GrassType} alt=\"type icon\" /> grass </button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'fire' ) } ><img src={FireType} alt=\"type icon\" /> fire </button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'water' ) } ><img src={WaterType} alt=\"type icon\" /> water</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'rock' ) } ><img src={RockType} alt=\"type icon\" /> rock</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'ghost' ) } ><img src={GhostType} alt=\"type icon\" /> ghost</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'electric' ) } ><img src={ElectricType} alt=\"type icon\" /> electric</button>\r\n                </div>\r\n                <div className=\"col-2\" >\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'bug' ) } ><img src={BugType} alt=\"type icon\" /> bug</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'poison' ) } ><img src={PoisonType} alt=\"type icon\" /> poison</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'normal' ) } ><img src={NormalType} alt=\"type icon\" /> normal</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'fairy' ) } ><img src={FairyType} alt=\"type icon\" /> fairy</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'fighting' ) } ><img src={FightingType} alt=\"type icon\" /> fighting</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'ice' ) } ><img src={IceType} alt=\"type icon\" /> ice</button>\r\n                </div>\r\n                <div className=\"col-3\" >\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'psychic' ) } ><img src={PsychicType} alt=\"type icon\" /> psychic</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'dragon' ) } ><img src={DragonType} alt=\"type icon\" /> dragon</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'dark' ) } ><img src={DarkType} alt=\"type icon\" /> dark</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'ground' ) } ><img src={GroundType} alt=\"type icon\" /> ground</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'flying' ) } ><img src={FlyingType} alt=\"type icon\" /> flying</button>\r\n                    <button className=\"fill\" onClick={ () => setPokemonsQ( 'steel' ) } ><img src={SteelType} alt=\"type icon\" /> steel</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <ul className=\"all-container\">\r\n            { pokeFilter.filter( pokef => pokef.types[0].type.name.includes( pokemonsQ ) ).map( (pke, fl) => (\r\n                <li key={pke.id} ><Link to={ `/${pke.id}` }>\r\n                <PokeCard\r\n                    key={fl}\r\n                    name={pke.name}\r\n                    id={pke.id}\r\n                    sprite={pke.sprites.versions['generation-v']['black-white'].animated.front_default}\r\n                    types={pke.types[0].type.name}\r\n                    abilities={pke.abilities[0].ability.name}\r\n                    stat_1={ pke.stats[0].base_stat }\r\n                    stat_2={ pke.stats[1].base_stat }\r\n                    stat_3={ pke.stats[2].base_stat }\r\n                  />\r\n                </Link></li>\r\n            ) ) }\r\n            </ul>\r\n            <button className=\"fill\" onClick={() => getPokemonsFiltered()}>Load more</button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport { PokemonFilter };","import React, { useEffect } from \"react\";\nimport { PokeCard } from \"./components/PokeCard\";\nimport { MdCatchingPokemon } from \"react-icons/md\";\nimport { BsViewList } from \"react-icons/bs\";\nimport { CgPokemon } from \"react-icons/cg\";\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport \"./index.css\";\nimport { PokemonAllData } from \"./components/PokemonAllData\";\nimport { PokemonFilter } from \"./components/PokemonFilter\";\n\n\nfunction App() {\n  const [pokemons, setPokemons] = React.useState([]);\n  const [pageInfo, setPageInfo] = React.useState({ prev: null, next: null });\n\n  const getPokemons = async ( url=`https://pokeapi.co/api/v2/pokemon?limit=20` ) => {\n    const res = await fetch( url );\n    const data = await res.json();\n    setPokemons([])\n\n    function pokemonObject(results) {\n      results.forEach(async (poke) => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${poke.name}`);\n        const dato = await res.json();\n        setTimeout(() => setPokemons(list => [...list ,dato]), 2000)\n      });\n    }\n\n    pokemonObject(data.results);\n    setPageInfo({ prev: data.previous, next: data.next })\n\n    \n\n  };\n  useEffect(() => {\n    getPokemons();\n  }, []);\n\n  return (\n    <Router>\n    <div className=\"app-container\">\n    <h1>Poke finder <MdCatchingPokemon /></h1>\n    <div className=\"buttonnav\" >\n    <Link to=\"/filter\" >\n    <button className=\"fill\" ><BsViewList /> Filter </button>\n    </Link>\n    <Link to=\"/\" >\n    <button className=\"fill\" ><CgPokemon /> All </button>\n    </Link>\n    </div>\n    \n      <Switch>\n          <Route path='/filter' >\n            <PokemonFilter />\n          </Route>\n        <Route path='/' exact>\n          <ul className=\"all-container\">\n            {pokemons.map((poke, pk) => (\n              <li key={poke.id} >\n              <Link to={ `/${poke.id}` } >\n                  <PokeCard\n                    key={pk}\n                    name={poke.name}\n                    id={poke.id}\n                    sprite={poke.sprites.versions['generation-v']['black-white'].animated.front_default}\n                    types={poke.types[0].type.name}\n                    abilities={poke.abilities[0].ability.name}\n                    stat_1={ poke.stats[0].base_stat }\n                    stat_2={ poke.stats[1].base_stat }\n                    stat_3={ poke.stats[2].base_stat }\n                  />\n              </Link>\n              </li>\n            ))}\n            \n          </ul>\n          <br />\n          <div className=\"buttonnav\" >\n            <button \n            className=\"fill\" \n            onClick={() => getPokemons(pageInfo.prev)}>\n            prev page\n          </button>\n          <button \n          className=\"fill\" \n          onClick={() => getPokemons(pageInfo.next)}>\n            next page\n          </button>\n          </div>\n        </Route>\n          <Route path='/:id' >\n              <PokemonAllData />\n          </Route>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}